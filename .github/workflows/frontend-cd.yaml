name: Frontend Continuous Deployment
# Triggers for the workflow
on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
    paths: starter/frontend

defaults:
  run:
    working-directory: starter/frontend

jobs:
  build:
    needs: [running-test, running-linter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          node-version-file: starter/frontend/.nvmrc

      - name: Restore cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependancies
        run: npm ci
        
      - name: Build Docker image
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} --tag=mp-frontend:latest .

      - name: Run Docker container
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend

      - name: Stop Docker container
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend
        
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWSID }}:user/github-action-user
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ vars.FRONTEND_ECR }}
          REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
